// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sensei.AspNet.Tests.Utils;

namespace Sensei.AspNet.Tests.Migrations
{
    [DbContext(typeof(TestDbContext))]
    partial class TestDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8");

            modelBuilder.Entity("Sensei.AspNet.Tests.Utils.TestChildModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("ChildId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ChildId");

                    b.ToTable("TestChildModel");
                });

            modelBuilder.Entity("Sensei.AspNet.Tests.Utils.TestChildModel2", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TestChildModel2");
                });

            modelBuilder.Entity("Sensei.AspNet.Tests.Utils.TestModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("Child1Id")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("Child2Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimAdded")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimAddedSkipIfExist")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimAddedSkipIfExist2")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimModified")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TestDateTime")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TestDecimal")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("TestDecimal2")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TestFlag")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TestInt")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TestInt2")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserIdAdded")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserIdAddedSkipIfExist")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserIdAddedSkipIfExist2")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserIdModified")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Child1Id");

                    b.HasIndex("Child2Id");

                    b.ToTable("TestModels");
                });

            modelBuilder.Entity("Sensei.AspNet.Tests.Utils.TestChildModel", b =>
                {
                    b.HasOne("Sensei.AspNet.Tests.Utils.TestChildModel2", "Child")
                        .WithMany()
                        .HasForeignKey("ChildId");
                });

            modelBuilder.Entity("Sensei.AspNet.Tests.Utils.TestModel", b =>
                {
                    b.HasOne("Sensei.AspNet.Tests.Utils.TestChildModel", "Child1")
                        .WithMany()
                        .HasForeignKey("Child1Id");

                    b.HasOne("Sensei.AspNet.Tests.Utils.TestChildModel2", "Child2")
                        .WithMany()
                        .HasForeignKey("Child2Id");
                });
#pragma warning restore 612, 618
        }
    }
}
